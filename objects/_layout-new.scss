/* ==========================================================================
   #LAYOUT
   ========================================================================== */

/**
 * Grid-like layout system.
 *
 * The layout object provides us with a column-style layout system. This file
 * contains the basic structural elements, but classes should be complemented
 * with width utilities, for example:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-1/2">
 *     </div>
 *     <div class="o-layout__item  u-1/2">
 *     </div>
 *   </div>
 *
 * The above will create a two-column structure in which each column will
 * fluidly fill half of the width of the parent. We can have more complex
 * systems:
 *
 *   <div class="o-layout">
 *     <div class="o-layout__item  u-1/1  u-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-1/2  u-1/3@medium">
 *     </div>
 *     <div class="o-layout__item  u-1/2  u-1/3@medium">
 *     </div>
 *   </div>
 *
 * The above will create a system in which the first item will be 100% width
 * until we enter our medium breakpoint, when it will become 33.333% width. The
 * second and third items will be 50% of their parent, until they also become
 * 33.333% width at the medium breakpoint.
 *
 * We can also manipulate entire layout systems by adding a series of modifiers
 * to the `.o-layout` block. For example:
 *
 *   <div class="o-layout  o-layout--reverse">
 *
 * This will reverse the displayed order of the system so that it runs in the
 * opposite order to our source, effectively flipping the system over.
 *
 *   <div class="o-layout  o-layout--[right|center]">
 *
 * This will cause the system to fill up from either the centre or the right
 * hand side. Default behaviour is to fill up the layout system from the left.
 *
 * There are plenty more options available to us: explore them below.
 */


/* Default/mandatory classes.
   ========================================================================== */

/**
 * 1. Allows us to use the layout object on any type of element.
 * 2. We need to defensively reset any box-model properties.
 * 3. The layout object and child items include padded gutters equal to half
 *    a spacing unit because they sit up against each other resulting in a 
 *    gutter of a full spacing unit both for inner and outer gutters:
 *    http://alistapart.com/article/learning-from-lego-a-step-forward-in-modular-web-design/
 * 4. Use `font-size: 0;` trick to remove whitespace between items
 */

.o-layout {
  display: block; /* [1] */
  margin:  0; /* [2] */
  padding: 0; /* [2] */
  list-style: none; /* [1] */
  padding: $spacing/2; /* [3] */
  font-size: 0; /* [4] */
}


  /**
   * 1. Required in order to combine fluid widths with fixed gutters.
   * 2. Allows us to manipulate grids vertically, with text-level properties,
   *    etc.
   * 3. Default item alignment is with the tops of each other, like most
   *    traditional grid/layout systems.
   * 4. By default, all layout items are full-width (mobile first).
   * 5. The layout object and child items include padded gutters equal to half
   *    a spacing unit because they sit up against each other resulting in a 
   *    gutter of a full spacing unit both for inner and outer gutters:
   *    http://alistapart.com/article/learning-from-lego-a-step-forward-in-modular-web-design/
   * 6. Set base font size to revert 'font-size: 0;' setting above
   */

  .o-layout__item {
    box-sizing: border-box; /* [1] */
    display: inline-block; /* [2] */
    vertical-align: top; /* [3] */
    width: 100%; /* [4] */
    padding: $spacing/2; /* [5] */
    font-size: $base-font-size; /* [6] */
  }





/* Spacing modifiers (gutter padding).
   ========================================================================== */

// Generates the following classes:
// .o-layout--flush
// .o-layout--xxs
// .o-layout--xs etc.

@each $spacing-name, $spacing-size in $spacing-sizes {
  
  .o-layout#{$spacing-name} {
    padding: $spacing-size/2;
    
    > .o-layout__item {
      padding: $spacing-size/2;
    }
    
  }
   
}





/* Vertical alignment modifiers.
   ========================================================================== */

/**
 * Align all grid items to the middles of each other.
 */

.o-layout--middle {

  > .o-layout__item {
    vertical-align: middle;
  }

}


/**
 * Align all grid items to the bottoms of each other.
 */

.o-layout--bottom {

  > .o-layout__item {
    vertical-align: bottom;
  }

}





/* Fill order modifiers.
   ========================================================================== */

/**
 * Fill up the layout system from the centre.
 */

.o-layout--center {
  text-align: center;

  > .o-layout__item {
    text-align: left;
  }

}


/**
 * Fill up the layout system from the right-hand side.
 */

.o-layout--right {
  text-align: right;

  > .o-layout__item {
    text-align: left;
  }

}


/**
 * Reverse the rendered order of the grid system.
 */

.o-layout--reverse {
  direction: rtl;

  > .o-layout__item {
    direction: ltr;
    text-align: left;
  }

}




/* Auto-widths modifier.
   ========================================================================== */

/**
 * Cause layout items to take up a non-explicit amount of width.
 */

.o-layout--auto {

  > .o-layout__item {
    width: auto;
  }

}





/**
 * If using Sass-MQ for breakpoints, generate responsive layout
 * classes with breakpoint suffix. Note: breakpoints are all
 * mobile-up, i.e. mobile-first.
 * 
 * For example: 
 *
 * <div class="o-layout--l@wide">
 */

$responsive-layout: false !default;


@if (variable-exists(mq-breakpoints) and $responsive-layout == true) {
  
  @each $breakpoint-name, $breakpoint-value in $mq-breakpoints {
    
    @include mq($from: $breakpoint-name) {
      
      @each $spacing-name, $spacing-size in $spacing-sizes {
        
        .o-layout#{$spacing-name}#{$breakpoint-separator}#{$breakpoint-name} {
          padding: $spacing-size/2;
          
          > .o-layout__item {
            padding: $spacing-size/2;
          }
          
        }
         
      }
      
    }
    
  }
  
}
